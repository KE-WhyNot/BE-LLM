name: Deploy to Cloud Run

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: asia-northeast3
  SERVICE_NAME: ai-service
  REPOSITORY: ai-repository
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    # - name: Set up Python
    #   uses: actions/setup-python@v4
    #   with:
    #     python-version: '3.11'
    
    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install -r requirements.txt
    
    # - name: Create smoke test
    #   run: |
    #     mkdir -p tests
    #     cat > tests/_smoke_test.py << 'PY'
    #     def test_smoke():
    #         assert True
    #     PY
    
    # - name: Run smoke tests
    #   run: |
    #     pytest -q tests/_smoke_test.py

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker for Artifact Registry
      run: gcloud auth configure-docker $REGION-docker.pkg.dev --quiet

    - name: Build & Tag
      run: |
        AR_IMAGE="$REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:$GITHUB_SHA"
        docker build -t "$AR_IMAGE" .
        docker tag "$AR_IMAGE" "$REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:latest"

    - name: Push to Artifact Registry
      run: |
        docker push "$REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:$GITHUB_SHA"
        docker push "$REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:latest"

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image $REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:$GITHUB_SHA \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --port 8000